[import](common.lg)
[Icons](icons.en-us.lg)

# SendActivity_7cnUNi()
[Activity
    Attachments = ${json(ListCard(turn.firstNames, turn.employees, turn.locations))}
]

# ListCard(firstNames, employees, locations)
-```
{
    "type": "AdaptiveCard",
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "version": "1.2",
    "body": [
        {
            "type": "TextBlock",
            "text": "${DateInfo(turn.formatDate)}",
            "wrap": true
        },
        {
            "type": "TextBlock",
            "text": "${firstNames} ${StatusInfo()}",
            "wrap": true
        },
        {
            "type": "TextBlock",
            "text": "Narrow your search...",
            "wrap": true
        },
        {
            "type": "ActionSet",
            "actions": [
                {
                    "type": "Action.Submit",
                    "title": "Show All [${count(employees)}]",
                    "data": {
                        "intent": "GetPeopleOnClientWork",
                        "available": "${dialog.availableEntity}",
                        "internal": "${dialog.internalEntity}",
                        "location": "${location}",
                        "datetime": [
                            {
                            "timex": [
                                "${dialog.fromDate}"
                            ],
                            "type": "date"
                            }
                        ],
                        "msteams": {
                            "type": "messageBack",
                            "displayText": "Show All [${count(employees)}]"
                        }
                    }
                },
                ${join(select(subArray(locations, 0, count(locations) <= 5 ? count(locations) : 5), location => LocationButton(location, Number(location, employees))), ',')}
            ]
        },
        {
            "type": "ActionSet",
            "actions": [
                ${join(select(if(subArray(locations, 5, count(locations)) != null, subArray(locations, 5, count(locations)), createArray()), location => LocationButton(location, Number(location, employees))), ',')}
            ]
        }
    ]
}
```

# DateInfo(date)
- IF: ${ turn.formatDate != null }
    - On **${turn.formatDate}** we have
- ELSE:
    - ``````

# StatusInfo()
- IF: ${ dialog.onInternal }
    - are on internal work.
- ELSEIF: ${ dialog.booked }
    - are on client work.
-ELSE:
    - are free.

# LocationButton(location, number)
-``` 
{
    "type": "Action.Submit",
    "title": "${location} [${number}]",
    "data": {
        "intent": "GetPeopleOnClientWork",
        "available": "${dialog.availableEntity}",
        "internal": "${dialog.internalEntity}",
        "location": "${location}",
        "datetime": [
            {
            "timex": [
                "${dialog.fromDate}"
            ],
            "type": "date"
            }
        ],
        "msteams": {
            "type": "messageBack",
	        "displayText": "${location} [${number}]"
        }
    }
}
```

# Number(location, employees)
- ${count(where(employees, employee => employee.defaultSite.name == location))}

# SendActivity_jZGZUb()
[Activity
    Text = ${SendActivity_jZGZUb_text()}
]
# SendActivity_jZGZUb_text()
- I got an error: ${turn.statusCode} ${turn.reasonPhrase}.

# SendActivity_AMPsi6()
[Activity
    Attachments = ${json(EmployeesListCard(dialog.locationEntity, turn.employees))}
]

# EmployeesListCard(location, employees)
-```
{
    "type": "AdaptiveCard",
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "version": "1.2",
    "body": [
        {
            "type": "TextBlock",
            "text": "${PeopleType()} - ${if(location == '', 'All', location)} ${if(dialog.booked == False, '(by billed days)', '')}",
            "wrap": true,
            "size": "Large"
        },
        ${EmployeeList(employees)},
        {
            "type": "ActionSet",
            "actions": [
                {
                    "type": "Action.OpenUrl",
                    "title": "More Booking Info",
                    "url": "${settings.CRMBookingEndpoint}"
                }
            ]
        }
    ]
}
```

# PeopleType()
- IF: ${ dialog.onInternal }
    - On internal work
- ELSEIF: ${ dialog.booked }
    - On client work
- ELSE:
    - Free

# EmployeeList(employees)
-```
{
    "type": "ColumnSet",
    "columns": [
        ${HeaderColumns()}
    ],
    "style": "default"
},
{
    "type": "Container",
    "items": [${join(select(employees, employee => EmployeeRow(employee)), ',')}]
}
```

# HeaderColumns
- IF: ${ dialog.onInternal }
    - ${join(createArray(HeaderColumn('', '30px'), HeaderColumn('Name', '125px'), HeaderColumn('Appointment', 'stretch')), ',')}
- ELSEIF: ${ dialog.booked }
    - ${join(createArray(HeaderColumn('', '30px'), HeaderColumn('Name', '125px'), HeaderColumn('Client', 'stretch')), ',')}
- ELSE:
    - ${join(createArray(HeaderColumn('', '30px'), HeaderColumn('Name', '110px'), HeaderColumn('Billed', '67px'), HeaderColumn('In Office', '53px'), HeaderColumn('Last Seen', '80px')), ',')}

# HeaderColumn(text, width)
-```
{
    "type": "Column",
    "width": "${width}",
    "items": [
        {
            "type": "TextBlock",
            "text": "${text}",
            "wrap": true,
            "size": "Small",
            "weight": "Bolder"
        }
    ]
}
```

# EmployeeRow(employee)
- ```
{
    "type": "ColumnSet",
    "columns": [
        ${BodyColumns(employee)}
    ],
    "height": "stretch",
    "separator": true
},
{
    "type": "TextBlock",
    "text": "${if(employee.NextClient != null, NextClient(employee.NextClient), '')}",
    "wrap": true,
    "size": "Small"
}
```

# BodyColumns(employee)
- IF: ${ dialog.onInternal }
    - ${join(createArray(AvatarColumn(employee.avatarUrl), BodyColumn(employee.displayName, '125px'), BodyColumn(if(employee.currentAppointment != null, employee.currentAppointment.subject, ''), 'stretch')), ',')}
- ELSEIF: ${ dialog.booked }
    - ${join(createArray(AvatarColumn(employee.avatarUrl), BodyColumn(employee.displayName, '125px'), BodyColumn(if(employee.currentAppointment != null, employee.currentAppointment.Regarding, ''), 'stretch')), ',')}
- ELSE:
    - ${join(createArray(AvatarColumn(employee.avatarUrl), BodyColumn(employee.displayName, '110px'), BodyColumn(concat(employee.BilledDays, if(employee.BilledDays != 0, ' Days', '')), '67px'), ImageColumn(if(employee.InOffice, GreenCircle(), RedCircle())), BodyColumn(employee.LastSeen, '80px')), ',')}

# AvatarColumn(avatarUrl)
-```
{
    "type": "Column",
    "width": "auto",
    "items": [
        {
            "type": "Image",
            "width": "30px",
            "height": "30px",
            "url": "${if(avatarUrl != null, avatarUrl, BlankAvatar())}",
            "style": "Person"
        }
    ],
    "verticalContentAlignment": "Center"
}
```

# BodyColumn(text, width)
-```
{
    "type": "Column",
    "width": "${width}",
    "items": [
        {
            "type": "TextBlock",
            "text": "${text}",
            "wrap": true,
            "size": "Small"
        }
    ],
    "verticalContentAlignment": "Center"
}
```

# ImageColumn(url)
-```
{
    "type": "Column",
    "width": "53px",
    "items": [
        {
            "type": "Image",
            "url": "${url}",
            "width": "17px",
            "height": "17px"
        }
    ],
    "verticalContentAlignment": "Center"
}
```

# NextClient(client)
-```
Free for ${client.FreeDays} ${if(client.FreeDays <= 1, 'day', 'days')}. Working for ${client.Name} - ${client.Date}.
```

# SendActivity_pArEiW()
[Activity
    Text = ${PeopleNotFound()}
]

# SendActivity_T25WLi()
[Activity
    Text = ${SendActivity_T25WLi_text()}
]

# SendActivity_T25WLi_text()
- Please specify a specific date to query.

# SendActivity_x5sCo7()
[Activity
    Text = ${PeopleNotFound()}
]

# PeopleNotFound
- Sorry, I couldn't find anyone ${Status()}${Date()}.

# Status()
- IF: ${ dialog.onInternal }
    - on internal work
- ELSEIF: ${ dialog.booked }
    - on client work
- ELSE:
    - who is free

# Date()
- IF: ${ turn.formatDate != null }
    - ``` on ${turn.formatDate}```
- ELSE:
    - ``````

# LogAction_Text_PbR9G5()
[Activity
    Text = ${LogAction_Text_PbR9G5_text()}
]
# LogAction_Text_PbR9G5_text()
- ${turn.employees}

# LogAction_Text_REKjJP()
[Activity
    Text = ${LogAction_Text_REKjJP_text()}
]
# LogAction_Text_REKjJP_text()
-```dialog.availableEntity \- ${dialog.availableEntity}
dialog.booked \- ${dialog.booked}```

# LogAction_Text_7liyco()
[Activity
    Text = ${LogAction_Text_7liyco_text()}
]
# LogAction_Text_7liyco_text()
- ```dialog.availableEntity: ${dialog.availableEntity}
dialog.booked: ${dialog.booked}
dialog.onInternal: ${dialog.onInternal}
dialog.locationEntity: ${dialog.locationEntity}```

# LogAction_Text_nn9UF5()
[Activity
    Text = ${LogAction_Text_nn9UF5_text()}
]
# LogAction_Text_nn9UF5_text()
- ${turn.employees}

# LogAction_Text_hadTDt()
[Activity
    Text = ${LogAction_Text_hadTDt_text()}
]
# LogAction_Text_hadTDt_text()
- ${turn.employees}