[import](common.lg)
[Icons](icons.en-us.lg)
[BillableList](billableList.en-us.lg)

# SendActivity_emJef2()
[Activity
    Text = ${SendActivity_emJef2_text()}
]

# SendActivity_emJef2_text()
- I got an error: ${turn.statusCode} ${turn.reasonPhrase}.
# SendActivity_o4r1IC()
[Activity
    Text = ${SendActivity_o4r1IC_text()}
]

# SendActivity_o4r1IC_text()
- Sorry, I couldn't find anyone with **${dialog.skillEntity}** skill in **${dialog.locationEntity}** office. Please try again.

# SendActivity_tzr9Na()
[Activity
    Attachments = ${json(WorkingEmployeesList(dialog.skillEntity, dialog.locationEntity, turn.sortedEmployees))}
]

# SendActivity_ZVrWLX()
[Activity
    Attachments = ${json(BillableEmployeesList(dialog.billableTitle, turn.billableEmployees))}
]

# WorkingEmployeesList(skill, location, employees)
-```
{
    "type": "AdaptiveCard",
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "version": "1.2",
    "body": [
        {
            "type": "TextBlock",
            "text": "${location} (by skill level)",
            "wrap": true,
            "size": "Large"
        },
        ${EmployeeList(employees, skill)}
    ]
}
```

# EmployeeList(employees, skill)
-```
{
    "type": "ColumnSet",
    "columns": [
        {
            "type": "Column",
            "width": "stretch",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Name",
                    "wrap": true,
                    "weight": "Bolder"
                }
            ]
        },
        {
            "type": "Column",
            "width": "stretch",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Level",
                    "wrap": true,
                    "weight": "Bolder"
                }
            ]
        }
    ],
    "style": "default"
},
{
    "type": "Container",
    "items": [${join(select(employees, e, EmployeeRow(skill, e)), ',')}],
}
```

# EmployeeRow(skill, employee)
- ```
{
    "type": "ColumnSet",
    "columns": [
        {
            "type": "Column",
            "width": "stretch",
            "items": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": "auto",
                            "items": [
                                {
                                    "type": "Image",
                                    "url": "${if(employee.avatarUrl != null, employee.avatarUrl, BlankAvatar())}",
                                    "width": "40px",
                                    "height": "40px",
                                    "style": "Person"
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "${employee.firstName} ${employee.lastName}",
                                    "wrap": true
                                }
                            ],
                            "verticalContentAlignment": "Center"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Column",
            "width": "stretch",
            "items": [
                {
                    "type": "TextBlock",
                    "wrap": true,
                    "text": "${employee.skillLevel}"
                }
            ],
            "verticalContentAlignment": "Center"
        }
    ],
    "height": "stretch",
    "separator": true
}
```
